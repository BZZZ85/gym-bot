import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
import asyncpg
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª .env
load_dotenv("ton.env")

BOT_TOKEN = os.getenv("BOT_TOKEN")
DATABASE_URL = os.getenv("DATABASE_URL")

if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å ton.env –∏–ª–∏ Variables –≤ Railway.")
if not DATABASE_URL:
    raise ValueError("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å ton.env –∏–ª–∏ Variables –≤ Railway.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def main_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è"), KeyboardButton("üìà –ü—Ä–æ–≥—Ä–µ—Å—Å")],
            [KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
        ],
        resize_keyboard=True
    )


# –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def create_tables(conn):
    await conn.execute("""
        CREATE TABLE IF NOT EXISTS users (
            user_id BIGINT PRIMARY KEY,
            username TEXT
        )
    """)


# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message()
async def start(message: types.Message):
    async with message.bot.get("db_pool").acquire() as conn:
        await conn.execute(
            "INSERT INTO users (user_id, username) VALUES ($1, $2) "
            "ON CONFLICT (user_id) DO NOTHING",
            message.from_user.id, message.from_user.username
        )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_kb()
    )


# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É
    db_pool = await asyncpg.create_pool(DATABASE_URL)

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
    async with db_pool.acquire() as conn:
        await create_tables(conn)

    # –ü–µ—Ä–µ–¥–∞—ë–º –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    dp["db_pool"] = db_pool

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –ë–î")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
