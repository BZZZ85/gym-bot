import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
import asyncpg

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
DATABASE_URL = os.environ.get("DATABASE_URL")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async def get_db_pool():
    return await asyncpg.create_pool(DATABASE_URL)

db_pool = asyncio.run(get_db_pool())

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
def main_kb():
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è"), KeyboardButton("üìà –ü—Ä–æ–≥—Ä–µ—Å—Å")],
            [KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
        ],
        resize_keyboard=True
    )
    return kb

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def create_tables():
    async with db_pool.acquire() as conn:
        await conn.execute("""
            CREATE TABLE IF NOT EXISTS users (
                user_id BIGINT PRIMARY KEY,
                username TEXT
            )
        """)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message()
async def start(message: types.Message):
    async with db_pool.acquire() as conn:
        await conn.execute(
            "INSERT INTO users (user_id, username) VALUES ($1, $2) ON CONFLICT (user_id) DO NOTHING",
            message.from_user.id, message.from_user.username
        )
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await create_tables()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
